; Load extension library pyguile.so
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Copyright (C) 2008 Omer Zak.
; This library is free software; you can redistribute it and/or
; modify it under the terms of the GNU Lesser General Public
; License as published by the Free Software Foundation; either
; version 2.1 of the License, or (at your option) any later version.
;
; This library is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
; Lesser General Public License for more details.
;
; You should have received a copy of the GNU Lesser General Public License
; along with this library, in a file named COPYING; if not, write to the
; Free Software Foundation, Inc., 59 Temple Place, Suite 330,
; Boston, MA  02111-1307  USA
;
; For licensing issues, contact <w1@zak.co.il>.
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Autogenerated at time %(timestamp)s
;;;
;;; To invoke it:
;;; (use-modules (pyguile))
;;; Then, can use: (python-import "mname")
;;;                (python-apply '("mname" "fname") '(#t) '())
;;;
;;; Note:  before importing modules from your working directory,
;;;        you have to invoke:
;;; (exec-python-str "import sys;sys.path = ['']+sys.path\n")
;;;        before trying to import anything.
;;;
(define-module (pyguile))
(export python-eval)
(export python-apply)
(export python-import)
(export pyguile-verbosity-set!)
(export python-version)
;To obtain guile version, use (version)
(export pyguile-version)
%(autogeneratedexports)s
(export pyscm-default-template)  ; Default template for wrapping procedures
				 ; into PyObjects.
(load-extension "./libpyguile.so" "init_wrapper")
(define python-version
  (lambda () (python-eval "__import__('sys').version" #t)))
; End of pyguile.scm
